@model List<RoomViewModel>

@{
    ViewData["Title"] = "Pokoje";
}

<!-- Miejsce na wynik przeliczonej ceny na USD -->
<div id="priceInUsdResult" style="text-align: center; font-size: 1.5em; margin-bottom: 30px;"></div>

<div class="rooms-container">
    @foreach (var room in Model)
    {
        <div class="room-card">
            <h3 class="room-name">@room.Name</h3>
            <p>Pojemność: @room.Capacity</p>
            <p>Cena za noc (PLN): @room.PricePerNight</p>

            <!-- Przycisk do przeliczenia ceny na USD -->
            <button onclick="getPriceInUsd(@room.PricePerNight)">Przelicz na USD</button>
        </div>
    }
</div>

<!-- Miejsce na flagę i wybór flagi -->
<div id="flagContainer" style="margin-top: 30px; text-align: center;">
    <img id="selectedFlag" src="https://flagcdn.com/w320/pl.png" alt="Flaga" style="cursor: pointer; width: 50px; height: auto;" onclick="toggleFlagList()" />
    <div id="flagList" style="display: none; margin-top: 10px;">
        <!-- Lista flag będzie się ładować dynamicznie -->
    </div>
</div>

<script>

     function getPriceInUsd(priceInPLN) {
        console.log("Cena w PLN:", priceInPLN);

        // Wysyłanie zapytania AJAX do kontrolera
        fetch(`/Room/GetPriceInUsd?priceInPLN=${priceInPLN}`)
            .then(response => response.json())
            .then(data => {
                const resultElement = document.getElementById('priceInUsdResult'); // Pobranie jednego miejsca na wynik

                if (data.success) {
                    console.log("Cena w USD:", data.priceInUsd);
                    resultElement.textContent = `Cena w USD: ${data.priceInUsd.toFixed(2)}`; // Zaktualizowanie tekstu w konkretnym elemencie
                } else {
                    console.log("Błąd:", data.message);
                    resultElement.textContent = `Błąd: ${data.message}`; // Zaktualizowanie tekstu o błędzie
                }
            })
            .catch(error => {
                console.error("Błąd:", error);
                alert("Wystąpił błąd podczas pobierania ceny.");
            });
    }

    const flagApiUrl = "https://flagcdn.com/en/codes.json"; // URL do API flag

    // Funkcja do załadowania wszystkich flag
    function loadFlags() {
        fetch(flagApiUrl)
            .then(response => response.json())
            .then(data => {
                const flagList = document.getElementById('flagList');
                flagList.innerHTML = ''; // Wyczyść aktualną listę

                Object.keys(data).forEach(countryCode => {
                    const flagUrl = `https://flagcdn.com/w320/${countryCode}.png`;

                    const flagItem = document.createElement('img');
                    flagItem.src = flagUrl;
                    flagItem.alt = countryCode;
                    flagItem.style.cursor = 'pointer';
                    flagItem.style.width = '50px';
                    flagItem.style.height = 'auto';
                    flagItem.onclick = () => changeFlag(countryCode);

                    flagList.appendChild(flagItem);
                });
            });
    }

    // Funkcja do zmiany flagi
    function changeFlag(countryCode) {
        const flagUrl = `https://flagcdn.com/w320/${countryCode}.png`;
        const selectedFlag = document.getElementById('selectedFlag');
        selectedFlag.src = flagUrl;
        selectedFlag.alt = countryCode;

        const flagList = document.getElementById('flagList');
        flagList.style.display = 'none'; // Ukryj listę po wybraniu flagi
    }

    // Funkcja do rozwijania i zwijania listy flag
    function toggleFlagList() {
        const flagList = document.getElementById('flagList');
        if (flagList.style.display === 'none' || flagList.style.display === '') {
            flagList.style.display = 'flex'; // Wyświetl listę w rzędach
            flagList.style.flexWrap = 'wrap'; // Flagi w rzędach
            flagList.style.justifyContent = 'center'; // Wyśrodkowanie flag
            flagList.style.gap = '10px'; // Odstępy między flagami
            loadFlags(); // Ładowanie flag
        } else {
            flagList.style.display = 'none';
        }
    }

</script>

<style>
    /* Style dla całej strony */
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        min-height: 100vh;
        background-color: #f4f4f4;
    }

    /* Kontener dla pokoi */
    .rooms-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 20px;
        padding: 20px;
        width: 100%;
    }

    /* Karta pokoju */
    .room-card {
        width: 250px;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .room-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
        }

    .room-name {
        font-size: 1.2em;
        font-weight: bold;
        margin-bottom: 10px;
    }

    /* Styl dla przycisku */
    .room-card button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 1em;
        transition: background-color 0.3s;
    }

        .room-card button:hover {
            background-color: #0056b3;
        }

    /* Styl dla kontenera flagi */
    #flagContainer {
        margin-top: 30px;
        text-align: center;
    }

    #flagList {
        margin-top: 10px;
        display: none;
        gap: 10px;
        justify-content: center;
        flex-wrap: wrap;
    }
</style>
